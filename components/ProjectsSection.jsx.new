"use client"

import React, { useState } from "react";
import { ExternalLink, Github } from "lucide-react";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";

const ProjectsSection = () => {
  const [filter, setFilter] = useState("all");

  const projects = [
    {
      id: 1,
      title: "E-Commerce Platform",
      description: "A full-stack e-commerce solution with payment integration, user authentication, and admin dashboard.",
      image: "/project1.jpg",
      tags: ["React", "Node.js", "MongoDB", "Stripe"],
      category: "fullstack",
      githubUrl: "https://github.com/Atharva907/ecommerce-platform",
      liveUrl: "https://ecommerce-demo.example.com",
    },
    {
      id: 2,
      title: "Task Management App",
      description: "A collaborative task management application with real-time updates and team collaboration features.",
      image: "/project2.jpg",
      tags: ["Next.js", "TypeScript", "PostgreSQL", "Socket.io"],
      category: "fullstack",
      githubUrl: "https://github.com/Atharva907/task-manager",
      liveUrl: "https://tasks-demo.example.com",
    },
    {
      id: 3,
      title: "Weather Dashboard",
      description: "A responsive weather dashboard with location-based forecasts and interactive weather maps.",
      image: "/project3.jpg",
      tags: ["React", "API Integration", "Charts.js"],
      category: "frontend",
      githubUrl: "https://github.com/Atharva907/weather-dashboard",
      liveUrl: "https://weather-demo.example.com",
    },
    {
      id: 4,
      title: "Blog Platform API",
      description: "RESTful API for a blog platform with user authentication, content management, and comment system.",
      image: "/project4.jpg",
      tags: ["Node.js", "Express", "MongoDB", "JWT"],
      category: "backend",
      githubUrl: "https://github.com/Atharva907/blog-api",
      liveUrl: null,
    },
  ];

  const filteredProjects = filter === "all"
    ? projects
    : projects.filter(project => project.category === filter);

  return (
    <section className="py-20 relative overflow-hidden">
      <div className="absolute inset-0 bg-grid-pattern opacity-[0.03]"></div>
      <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
        <div className="text-center mb-16 animate-in fade-in slide-in-from-bottom-4 duration-700">
          <h2 className="text-3xl md:text-4xl font-bold mb-4 bg-gradient-to-r from-foreground to-foreground/70 bg-clip-text text-transparent">My Projects</h2>
          <p className="text-lg text-muted-foreground max-w-3xl mx-auto leading-relaxed">
            Here are some of my recent projects. Each one represents a unique challenge and learning experience.
          </p>
        </div>

        <div className="flex justify-center mb-12 animate-in fade-in slide-in-from-bottom-4 duration-700" style={{animationDelay: "200ms"}}>
          <div className="inline-flex rounded-full bg-secondary/50 p-1 backdrop-blur-sm shadow-lg" role="group">
            {["all", "fullstack", "frontend", "backend"].map((category) => (
              <button
                key={category}
                type="button"
                className={`px-5 py-2 text-sm font-medium rounded-full transition-all duration-300 ${
                  filter === category
                    ? "bg-primary text-primary-foreground shadow-md"
                    : "text-foreground hover:bg-accent hover:text-accent-foreground"
                }`}
                onClick={() => setFilter(category)}
              >
                {category === "all" ? "All Projects" : category.charAt(0).toUpperCase() + category.slice(1)}
              </button>
            ))}
          </div>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-8">
          {filteredProjects.map((project, index) => (
            <Card key={project.id} className="overflow-hidden group hover:shadow-xl transition-all duration-300 hover:-translate-y-2 border border-border/50 hover:border-primary/20 animate-in fade-in slide-in-from-bottom-4 duration-700" style={{animationDelay: `${300 + index * 100}ms`}}>
              <div className="aspect-video bg-gradient-to-br from-secondary to-secondary/50 relative overflow-hidden">
                <div className="absolute inset-0 bg-gradient-to-t from-background/80 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                <div className="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                  <div className="flex gap-3">
                    <Button asChild size="sm" className="shadow-lg">
                      <a
                        href={project.githubUrl}
                        target="_blank"
                        rel="noopener noreferrer"
                      >
                        <Github className="h-4 w-4 mr-2" />
                        Code
                      </a>
                    </Button>
                    {project.liveUrl && (
                      <Button asChild size="sm" className="shadow-lg">
                        <a
                          href={project.liveUrl}
                          target="_blank"
                          rel="noopener noreferrer"
                        >
                          <ExternalLink className="h-4 w-4 mr-2" />
                          Live
                        </a>
                      </Button>
                    )}
                  </div>
                </div>
                <div className="absolute top-4 right-4 bg-primary/10 backdrop-blur-sm rounded-full px-3 py-1 text-xs font-medium text-primary">
                  {project.category === "fullstack" ? "Full Stack" : project.category.charAt(0).toUpperCase() + project.category.slice(1)}
                </div>
              </div>
              <CardHeader>
                <CardTitle className="text-xl">{project.title}</CardTitle>
                <CardDescription className="line-clamp-2">{project.description}</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="flex flex-wrap gap-2 mt-2">
                  {project.tags.map((tag, tagIndex) => (
                    <span
                      key={tagIndex}
                      className="inline-block bg-secondary/70 text-secondary-foreground text-xs px-3 py-1 rounded-full font-medium hover:bg-primary/20 hover:text-primary transition-colors duration-200"
                    >
                      {tag}
                    </span>
                  ))}
                </div>
              </CardContent>
              <CardFooter className="flex gap-2 pt-0">
                <Button asChild variant="outline" size="sm" className="flex-1 hover:bg-primary hover:text-primary-foreground transition-colors duration-300">
                  <a
                    href={project.githubUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    <Github className="h-4 w-4 mr-2" />
                    Code
                  </a>
                </Button>
                {project.liveUrl && (
                  <Button asChild size="sm" className="flex-1">
                    <a
                      href={project.liveUrl}
                      target="_blank"
                      rel="noopener noreferrer"
                    >
                      <ExternalLink className="h-4 w-4 mr-2" />
                      Live Demo
                    </a>
                  </Button>
                )}
              </CardFooter>
            </Card>
          ))}
        </div>
      </div>
    </section>
  );
};

export default ProjectsSection;